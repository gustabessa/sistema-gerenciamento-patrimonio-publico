/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package trabalho02;

import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author gusta
 */
public class JFrameMovimentacoes extends javax.swing.JDialog {

    private MovimentacaoItemDAO MIDAO = new MovimentacaoItemDAO();
    private MovimentacaoDonoDAO MDDAO = new MovimentacaoDonoDAO();
    private MITableModel tmodel = new MITableModel();
    private MDTableModel mdmodel = new MDTableModel();
    private static Servidor logado;
    private List<Object> MovItem = MIDAO.listar();
    private List<MovimentacaoDono> MovDono = MDDAO.listar();

    /**
     * Creates new form JFrameMovimentacoes
     */
    public JFrameMovimentacoes(Servidor s) {
        initComponents();
        setLocationRelativeTo(null);
        setModal(true);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        logado = s;
        jTable1.setModel(tmodel);
        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
        TableColumnModel colModel = jTable1.getColumnModel();
        colModel.getColumn(3).setCellRenderer(new DateCellRenderer());
        colModel.getColumn(3).setPreferredWidth(30);

        jTable2.setModel(mdmodel);
        jTable2.setAutoResizeMode(JTable.AUTO_RESIZE_NEXT_COLUMN);
        TableColumnModel colModel2 = jTable2.getColumnModel();
        colModel2.getColumn(3).setCellRenderer(new DateCellRenderer());
        colModel2.getColumn(3).setPreferredWidth(30);

        ocbox.setModel(new DefaultComboBoxModel());
        dcbox.setModel(new DefaultComboBoxModel());
        icbox.setModel(new DefaultComboBoxModel());
        ocbox.addItem("Sem Filtro");
        dcbox.addItem("Sem Filtro");
        icbox.addItem("Sem Filtro");
        ocbox1.setModel(new DefaultComboBoxModel());
        dcbox1.setModel(new DefaultComboBoxModel());
        icbox1.setModel(new DefaultComboBoxModel());
        ocbox1.addItem("Sem Filtro");
        dcbox1.addItem("Sem Filtro");
        icbox1.addItem("Sem Filtro");
        for (Object mi1 : MovItem) {
            MovimentacaoItem mi = (MovimentacaoItem) mi1;
            tmodel.add(mi);
            int flag = 0;
            flag = 0;
            for (int i = 0; i < ocbox.getItemCount(); i++) {

                if (mi.getOrigem().toString().equals(ocbox.getItemAt(i).toString())) {
                    flag++;
                }
            }
            if (flag == 0) {
                ocbox.addItem(mi.getOrigem());
            }
            flag = 0;
            for (int i = 0; i < dcbox.getItemCount(); i++) {

                if (mi.getDestino().toString().equals(dcbox.getItemAt(i).toString())) {
                    flag++;
                }
            }
            if (flag == 0) {
                dcbox.addItem(mi.getDestino());
            }
            flag = 0;
            for (int i = 0; i < icbox.getItemCount(); i++) {

                if (mi.getItem().toString().equals(icbox.getItemAt(i).toString())) {
                    flag++;
                }
            }
            if (flag == 0) {
                icbox.addItem(mi.getItem());
            }
        }
        for (MovimentacaoDono md : MovDono) {
            mdmodel.add(md);
            int flag = 0;
            flag = 0;
            for (int i = 0; i < ocbox1.getItemCount(); i++) {

                if (md.getOrigem().toString().equals(ocbox1.getItemAt(i).toString())) {
                    flag++;
                }
            }
            if (flag == 0) {
                ocbox1.addItem(md.getOrigem());
            }
            flag = 0;
            for (int i = 0; i < dcbox1.getItemCount(); i++) {

                if (md.getDestino().toString().equals(dcbox1.getItemAt(i).toString())) {
                    flag++;
                }
            }
            if (flag == 0) {
                dcbox1.addItem(md.getDestino());
            }
            flag = 0;
            for (int i = 0; i < icbox1.getItemCount(); i++) {

                if (md.getAmbiente().toString().equals(icbox1.getItemAt(i).toString())) {
                    flag++;
                }
            }
            if (flag == 0) {
                icbox1.addItem(md.getAmbiente());
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        movimentacoes = new javax.swing.JTabbedPane();
        movimentacoesitens = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        dcbox = new javax.swing.JComboBox();
        ocbox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        icbox = new javax.swing.JComboBox();
        movimentacoesdonos = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        dcbox1 = new javax.swing.JComboBox();
        ocbox1 = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        icbox1 = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item", "Ambiente Origem", "Ambiente Destino", "Data"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Motivo:");

        jButton1.setText("Criar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Excluir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filtros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        dcbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcboxActionPerformed(evt);
            }
        });

        ocbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ocboxActionPerformed(evt);
            }
        });

        jLabel2.setText("Ambiente Origem:");

        jLabel3.setText("Ambiente Destino:");

        jLabel4.setText("Item:");

        icbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                icboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ocbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(icbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(ocbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(icbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dcbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout movimentacoesitensLayout = new javax.swing.GroupLayout(movimentacoesitens);
        movimentacoesitens.setLayout(movimentacoesitensLayout);
        movimentacoesitensLayout.setHorizontalGroup(
            movimentacoesitensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movimentacoesitensLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(movimentacoesitensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, movimentacoesitensLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addGroup(movimentacoesitensLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        movimentacoesitensLayout.setVerticalGroup(
            movimentacoesitensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movimentacoesitensLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(movimentacoesitensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        movimentacoes.addTab("Movimentações Itens", movimentacoesitens);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable2KeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setResizable(false);
            jTable2.getColumnModel().getColumn(1).setResizable(false);
            jTable2.getColumnModel().getColumn(2).setResizable(false);
            jTable2.getColumnModel().getColumn(3).setResizable(false);
            jTable2.getColumnModel().getColumn(4).setResizable(false);
        }

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Tahoma", 0, 11)); // NOI18N
        jTextArea2.setRows(5);
        jScrollPane4.setViewportView(jTextArea2);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setText("Motivo:");

        jButton3.setText("Criar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Excluir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Filtros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        dcbox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dcbox1ActionPerformed(evt);
            }
        });

        ocbox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ocbox1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Dono Origem:");

        jLabel7.setText("Dono Destino:");

        jLabel8.setText("Ambiente:");

        icbox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                icbox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(ocbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(icbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(ocbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(icbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dcbox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout movimentacoesdonosLayout = new javax.swing.GroupLayout(movimentacoesdonos);
        movimentacoesdonos.setLayout(movimentacoesdonosLayout);
        movimentacoesdonosLayout.setHorizontalGroup(
            movimentacoesdonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movimentacoesdonosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(movimentacoesdonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 705, Short.MAX_VALUE)
                    .addComponent(jScrollPane4)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, movimentacoesdonosLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(movimentacoesdonosLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        movimentacoesdonosLayout.setVerticalGroup(
            movimentacoesdonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(movimentacoesdonosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(movimentacoesdonosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        movimentacoes.addTab("Movimentações Donos", movimentacoesdonos);

        jMenu1.setText("Abrir");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Usuário");

        jMenuItem1.setText("Menu");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuItem2.setText("Sair");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Movimentações");

        jMenuItem3.setText("Abrir");
        jMenuItem3.setEnabled(false);
        jMenu3.add(jMenuItem3);

        jMenuBar1.add(jMenu3);

        jMenu4.setText("Revisões Anuais");

        jMenuItem4.setText("Abrir");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenuBar1.add(jMenu4);

        jMenu5.setText("CRUD");

        jMenuItem5.setText("Abrir");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem5);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(movimentacoes)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(movimentacoes, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        dispose();
        new JFrameMenuUsuario(logado).setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        dispose();
        new JFrameLogin().setVisible(true);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        dispose();
        new JFrameRevisaoAnual(logado).setVisible(true);
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        dispose();
        new JFrameCRUD(logado).setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if (jTable1.getSelectedRowCount() > 0) {

            MovimentacaoItem mi = tmodel.get(jTable1.getSelectedRow());
            jTextArea1.setText(mi.getMotivo());
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            MovimentacaoItem mi = tmodel.get(jTable1.getSelectedRow());
            jTextArea1.setText(mi.getMotivo());
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if (logado.getPapel().equals("adm")) {
            new JFrameCriaMovItem(tmodel).setVisible(true);
            MovItem = MIDAO.listar();
            int tam = ocbox.getItemCount() - 1;
            for (int i = 0; i < tam; i++) {
                ocbox.removeItemAt(1);
            }
            tam = dcbox.getItemCount() - 1;
            for (int i = 0; i < tam; i++) {
                dcbox.removeItemAt(1);
            }
            tam = icbox.getItemCount() - 1;
            for (int i = 0; i < tam; i++) {
                icbox.removeItemAt(1);
            }
            for (Object mi1 : MovItem) {
                MovimentacaoItem mi = (MovimentacaoItem) mi1;

                int flag = 0;
                flag = 0;
                for (int i = 0; i < ocbox.getItemCount(); i++) {

                    if (mi.getOrigem().toString().equals(ocbox.getItemAt(i).toString())) {
                        flag++;
                    }
                }
                if (flag == 0) {
                    ocbox.addItem(mi.getOrigem());
                }
                flag = 0;
                for (int i = 0; i < dcbox.getItemCount(); i++) {

                    if (mi.getDestino().toString().equals(dcbox.getItemAt(i).toString())) {
                        flag++;
                    }
                }
                if (flag == 0) {
                    dcbox.addItem(mi.getDestino());
                }
                flag = 0;
                for (int i = 0; i < icbox.getItemCount(); i++) {

                    if (mi.getItem().toString().equals(icbox.getItemAt(i).toString())) {
                        flag++;
                    }
                }
                if (flag == 0) {
                    icbox.addItem(mi.getItem());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Permitido apenas para administradores!", "Acesso negado.", JOptionPane.OK_OPTION);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (logado.getPapel().equals("adm")) {

            if (jTable1.getSelectedRowCount() != 0) {
                MIDAO.exclui(tmodel.get(jTable1.getSelectedRow()));
                tmodel.remove(jTable1.getSelectedRow());
                MovItem = MIDAO.listar();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Permitido apenas para administradores!", "Acesso negado.", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void ocboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ocboxActionPerformed
        // TODO add your handling code here:
        if (ocbox.hasFocus()) {
            dcbox.setSelectedIndex(0);
            icbox.setSelectedIndex(0);
            int tam = tmodel.getRowCount();
            for (int i = 0; i < tam; i++) {
                tmodel.remove(0);
            }
            if (ocbox.getSelectedIndex() != 0) {
                for (Object mi1 : MovItem) {
                    MovimentacaoItem mi = (MovimentacaoItem) mi1;
                    if (mi.getOrigem().toString().equals(ocbox.getSelectedItem().toString())) {
                        tmodel.add(mi);
                    }
                }
            } else {
                for (Object mi1 : MovItem) {
                    MovimentacaoItem mi = (MovimentacaoItem) mi1;
                    tmodel.add(mi);
                }
            }
        }


    }//GEN-LAST:event_ocboxActionPerformed

    private void dcboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcboxActionPerformed
        // TODO add your handling code here:
        if (dcbox.hasFocus()) {
            ocbox.setSelectedIndex(0);
            icbox.setSelectedIndex(0);
            int tam = tmodel.getRowCount();
            for (int i = 0; i < tam; i++) {
                tmodel.remove(0);
            }
            if (dcbox.getSelectedIndex() != 0) {
                for (Object mi1 : MovItem) {
                    MovimentacaoItem mi = (MovimentacaoItem) mi1;
                    if (mi.getDestino().toString().equals(dcbox.getSelectedItem().toString())) {
                        tmodel.add(mi);
                    }
                }
            } else {
                for (Object mi1 : MovItem) {
                    MovimentacaoItem mi = (MovimentacaoItem) mi1;
                    tmodel.add(mi);
                }
            }
        }
    }//GEN-LAST:event_dcboxActionPerformed

    private void icboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_icboxActionPerformed
        // TODO add your handling code here:
        if (icbox.hasFocus()) {
            dcbox.setSelectedIndex(0);
            ocbox.setSelectedIndex(0);
            int tam = tmodel.getRowCount();
            for (int i = 0; i < tam; i++) {
                tmodel.remove(0);
            }
            if (icbox.getSelectedIndex() != 0) {
                for (Object mi1 : MovItem) {
                    MovimentacaoItem mi = (MovimentacaoItem) mi1;
                    if (mi.getItem().toString().equals(icbox.getSelectedItem().toString())) {
                        tmodel.add(mi);
                    }
                }
            } else {
                for (Object mi1 : MovItem) {
                    MovimentacaoItem mi = (MovimentacaoItem) mi1;
                    tmodel.add(mi);
                }
            }
        }
    }//GEN-LAST:event_icboxActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (logado.getPapel().equals("adm")) {

            new JFrameCriaMovDono(mdmodel).setVisible(true);
            MovDono = MDDAO.listar();
            int tam = ocbox1.getItemCount() - 1;
            for (int i = 0; i < tam; i++) {
                ocbox1.removeItemAt(1);
            }
            tam = dcbox1.getItemCount() - 1;
            for (int i = 0; i < tam; i++) {
                dcbox1.removeItemAt(1);
            }
            tam = icbox1.getItemCount() - 1;
            for (int i = 0; i < tam; i++) {
                icbox1.removeItemAt(1);
            }
            for (MovimentacaoDono md : MovDono) {
                int flag = 0;
                flag = 0;
                for (int i = 0; i < ocbox1.getItemCount(); i++) {

                    if (md.getOrigem().toString().equals(ocbox1.getItemAt(i).toString())) {
                        flag++;
                    }
                }
                if (flag == 0) {
                    ocbox1.addItem(md.getOrigem());
                }
                flag = 0;
                for (int i = 0; i < dcbox1.getItemCount(); i++) {

                    if (md.getDestino().toString().equals(dcbox1.getItemAt(i).toString())) {
                        flag++;
                    }
                }
                if (flag == 0) {
                    dcbox1.addItem(md.getDestino());
                }
                flag = 0;
                for (int i = 0; i < icbox1.getItemCount(); i++) {

                    if (md.getAmbiente().toString().equals(icbox1.getItemAt(i).toString())) {
                        flag++;
                    }
                }
                if (flag == 0) {
                    icbox1.addItem(md.getAmbiente());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Permitido apenas para administradores!", "Acesso negado.", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (logado.getPapel().equals("adm")) {
            if (jTable2.getSelectedRowCount() != 0) {
                MDDAO.exclui(mdmodel.get(jTable2.getSelectedRow()));
                mdmodel.remove(jTable2.getSelectedRow());
                MovDono = MDDAO.listar();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Permitido apenas para administradores!", "Acesso negado.", JOptionPane.OK_OPTION);
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void dcbox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dcbox1ActionPerformed
        // TODO add your handling code here:
        if (dcbox1.hasFocus()) {
            icbox1.setSelectedIndex(0);
            ocbox1.setSelectedIndex(0);
            int tam = mdmodel.getRowCount();
            for (int i = 0; i < tam; i++) {
                mdmodel.remove(0);
            }
            if (dcbox1.getSelectedIndex() != 0) {
                for (MovimentacaoDono md : MovDono) {
                    if (md.getDestino().toString().equals(dcbox1.getSelectedItem().toString())) {
                        mdmodel.add(md);
                    }
                }
            } else {
                for (MovimentacaoDono md : MovDono) {
                    mdmodel.add(md);
                }
            }
        }
    }//GEN-LAST:event_dcbox1ActionPerformed

    private void ocbox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ocbox1ActionPerformed
        // TODO add your handling code here:
        if (ocbox1.hasFocus()) {
            dcbox1.setSelectedIndex(0);
            icbox1.setSelectedIndex(0);
            int tam = mdmodel.getRowCount();
            for (int i = 0; i < tam; i++) {
                mdmodel.remove(0);
            }
            if (ocbox1.getSelectedIndex() != 0) {
                for (MovimentacaoDono md : MovDono) {
                    if (md.getOrigem().toString().equals(ocbox1.getSelectedItem().toString())) {
                        mdmodel.add(md);
                    }
                }
            } else {
                for (MovimentacaoDono md : MovDono) {
                    mdmodel.add(md);
                }
            }
        }
    }//GEN-LAST:event_ocbox1ActionPerformed

    private void icbox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_icbox1ActionPerformed
        // TODO add your handling code here:
        if (icbox1.hasFocus()) {
            dcbox1.setSelectedIndex(0);
            ocbox1.setSelectedIndex(0);
            int tam = mdmodel.getRowCount();
            for (int i = 0; i < tam; i++) {
                mdmodel.remove(0);
            }
            if (icbox1.getSelectedIndex() != 0) {
                for (MovimentacaoDono md : MovDono) {
                    if (md.getAmbiente().toString().equals(icbox1.getSelectedItem().toString())) {
                        mdmodel.add(md);
                    }
                }
            } else {
                for (MovimentacaoDono md : MovDono) {
                    mdmodel.add(md);
                }
            }
        }
    }//GEN-LAST:event_icbox1ActionPerformed

    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_UP) {
            MovimentacaoDono md = mdmodel.get(jTable2.getSelectedRow());
            jTextArea2.setText(md.getMotivo());
        }
    }//GEN-LAST:event_jTable2KeyReleased

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        if (jTable2.getSelectedRowCount() > 0) {

            MovimentacaoDono md = mdmodel.get(jTable2.getSelectedRow());
            jTextArea2.setText(md.getMotivo());
        }
    }//GEN-LAST:event_jTable2MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameMovimentacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameMovimentacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameMovimentacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameMovimentacoes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameMovimentacoes(logado).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox dcbox;
    private javax.swing.JComboBox dcbox1;
    private javax.swing.JComboBox icbox;
    private javax.swing.JComboBox icbox1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTabbedPane movimentacoes;
    private javax.swing.JPanel movimentacoesdonos;
    private javax.swing.JPanel movimentacoesitens;
    private javax.swing.JComboBox ocbox;
    private javax.swing.JComboBox ocbox1;
    // End of variables declaration//GEN-END:variables
}
